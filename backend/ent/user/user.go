// Code generated by entc, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUserEmail holds the string denoting the user_email field in the database.
	FieldUserEmail = "user_email"
	// FieldUserName holds the string denoting the user_name field in the database.
	FieldUserName = "user_name"

	// EdgeSells holds the string denoting the sells edge name in mutations.
	EdgeSells = "sells"
	// EdgeRole holds the string denoting the role edge name in mutations.
	EdgeRole = "role"

	// Table holds the table name of the user in the database.
	Table = "users"
	// SellsTable is the table the holds the sells relation/edge.
	SellsTable = "bills"
	// SellsInverseTable is the table name for the Bill entity.
	// It exists in this package in order to avoid circular dependency with the "bill" package.
	SellsInverseTable = "bills"
	// SellsColumn is the table column denoting the sells relation/edge.
	SellsColumn = "user_id"
	// RoleTable is the table the holds the role relation/edge.
	RoleTable = "users"
	// RoleInverseTable is the table name for the Role entity.
	// It exists in this package in order to avoid circular dependency with the "role" package.
	RoleInverseTable = "roles"
	// RoleColumn is the table column denoting the role relation/edge.
	RoleColumn = "role_id"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldUserEmail,
	FieldUserName,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the User type.
var ForeignKeys = []string{
	"role_id",
}

var (
	// UserEmailValidator is a validator for the "user_email" field. It is called by the builders before save.
	UserEmailValidator func(string) error
	// UserNameValidator is a validator for the "user_name" field. It is called by the builders before save.
	UserNameValidator func(string) error
)
